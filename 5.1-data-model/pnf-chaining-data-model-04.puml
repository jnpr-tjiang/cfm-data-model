@startuml

skinparam object {
	BackgroundColor PaleGreen
	BackgroundColor<<PhysicalRouter>> Wheat
	BackgroundColor<<PhysicalInterface>> Wheat
	BackgroundColor<<LogicalRouter>> Wheat
	BackgroundColor<<VirtualNetwork>> Wheat
	BackgroundColor<<VirtualMachineInterface>> Wheat
	BackgroundColor<<ServiceApplianceSet>> Wheat
	BackgroundColor<<ServiceAppliance>> Wheat
	BackgroundColor<<ServiceTemplate>> Wheat
}

package default-domain {
    object Firewall_Svc<<ServiceTemplate>> {
        - properties:
            \tservice_type: "firewall"
            \tinterface_types: ["left", "right"]
            \tservice_virtualization_type: "physical_device"
    }
}

package global_system_config {
    
    object SRX<<PhysicalRouter>> {
        rb_roles:
        \tPNF-ServiceChain@pnf
    }

    object SRX_Left_PI<<PhysicalInterface>> {
    }

    object SRX_Right_PI<<PhysicalInterface>> {
    }

    object PNF_CLUSTER<<ServiceApplianceSet>> {
    }

    object PNF<<ServiceAppliance>> {
    }

    object QFX<<PhysicalRouter>> {
        rb_roles:
            \tCRB-MCAST-Gateway@leaf
            \tPNF-ServiceChain@leaf
    }

    object QFX_Left_PI<<PhysicalInterface>> {
    }

    object QFX_Right_PI<<PhysicalInterface>> {
    }

    object Svc_Left_LI<<LogicalInterface>> {
    }

    object Svc_Right_LI<<LogicalInterface>> {
    }

    object lo0<<PhysicalInterface>> #lightgreen {
    }

    object lo0.4091<<LogicalInterface>> {
    }

    object Svc_PIM_IP<<InstanceIP>> {
        - ip from fabric loopback namespace
    }

    object Svc_IP_1<<InstanceIP>> {
        - ip from left svc subnet
    }

    object Svc_IP_2<<InstanceIP>> {
        - ip from right svc subnet
    }

    object Svc_IP_3<<InstanceIP>> {
        - ip from left svc subnet
    }

    object Svc_IP_4<<InstanceIP>> {
        - ip from right svc subnet
    }

    SRX *-- SRX_Left_PI: has
    SRX *-- SRX_Right_PI: has
    SRX *-- lo0: has
    lo0 *-- lo0.4091
    lo0.4091 <-- Svc_PIM_IP

    QFX *-- QFX_Left_PI: has
    QFX *-- QFX_Right_PI: has

    QFX_Left_PI *-- Left_IRB_LI: has
    QFX_Right_PI *-- Right_IRB_LI: has

    Left_IRB_LI <-- Svc_IP_3
    Right_IRB_LI <-- Svc_IP_4

    QFX_Left_PI <---> SRX_Left_PI: underlay conn
    QFX_Right_PI <---> SRX_Right_PI: underlay conn

    SRX_Left_PI *-- Svc_Left_LI: has
    SRX_Right_PI *-- Svc_Right_LI: has

    Svc_Left_LI <-- Svc_IP_1
    Svc_Right_LI <-- Svc_IP_2

    PNF_CLUSTER *- PNF: has
    SRX_Left_PI <---- PNF: "left\t\t\nunderlay\t\t\nport\t\t"
    SRX_Right_PI <---- PNF: right\nunderlay\nport
}

package project {
    object FW_Svc_inst<<ServiceInstance>> {
        enable_bgp: True
    }
    
    object Engineering_LR<<LogicalRouter>> {
    }
    
    object Sales_LR<<LogicalRouter>> {
    }
    
    object Dev<<VirtualNetwork>> {
    }
    
    object QA<<VirtualNetwork>> {
    }
    
    object Pre_Sales<<VirtualNetwork>> {
    }
    
    object Post_Sales<<VirtualNetwork>> {
    }
    
    object Engineering_LR_Internal_VN<<VirtualNetwork>> {
    }
    
    object Sales_LR_Internal_VN<<VirtualNetwork>> {
    }
    
    object svc_attachment<<PortTuple>> {
        - left_vlan: 4090
        - right_vlan:4091
        - left_asn: 64511
        - right_asn: 64512
        - pnf_asn: 64500
    }
    
    object VMI_1<<VirtualMachineInterface>> {
    }
    
    object VMI_2<<VirtualMachineInterface>> {
    }
    
    object VMI_3<<VirtualMachineInterface>> {
    }
    
    object VMI_4<<VirtualMachineInterface>> {
    }
    
    Dev <-- VMI_1
    QA <-- VMI_2
    Pre_Sales <-- VMI_3
    Post_Sales <-- VMI_4
    
    Engineering_LR <-- Dev
    Engineering_LR <-- QA
    Engineering_LR --> Engineering_LR_Internal_VN


    Sales_LR <-- Pre_Sales
    Sales_LR <-- Post_Sales
    Sales_LR --> Sales_LR_Internal_VN
    
    FW_Svc_inst *-- svc_attachment: has
    svc_attachment --> Engineering_LR: left LR
    svc_attachment --> Sales_LR: right LR
}


PNF_CLUSTER <-- Firewall_Svc
Firewall_Svc <- FW_Svc_inst
QFX <-- Engineering_LR: extend left tenant\nVRF to border leaf
QFX <-- Sales_LR: extend right tenant\nVRF to border leaf

@enduml