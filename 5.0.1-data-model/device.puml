@startuml
package Config_DataModel\n[schema/vnc_cfg.xsd] {

    class global_system_config << (I, #FF7700) Identity>> {
        - autonomous_system: AutonomousSystemType
        - config_version: String
        - graceful_restart_parameters: GracefulRestartParametersType
        - plugin_tuning: PluginProperties
        - ibgp_auto_mesh: Boolean
        - bgp_always_compare_med: Boolean
        - rd_cluster_seed: RdClusterSeedType
        - ip_fabric_subnets: SubnetListType
        - bgpaas_parameters: BGPaaServiceParametersType
        - <b>supported_device_families: DeviceFamilyListType</b>
        - <b>supported_fabric_annotations: KeyValuePairs</b>
    }

    class physical_router << (I, #FF7700) Identity>> {
        [[file:///Users/tjiang/gitlab/xmlparsing/xmltest/svg/physical_router.svg]]
        - vendor_name: String
        - product_name: String
        - role: PhysicalRouterRole
        - <b>rb_roles: List<RoutingBridgingRole>
        - <b>device_family: String</b>
        - <b>serial_num: String</b>
    }

    class physical_interface << (I, #FF7700) Identity>> {
        [[file:///Users/tjiang/gitlab/xmlparsing/xmltest/svg/physical_interface.svg]]
        - ethernet_segment_identifier: String
        - <b>type: enum { regular, ae, irb }
        - <b>mac_addresses: MacAddressesType</b>
    }

    class logical_interface << (I, #FF7700) Identity>> {
        [[file:///Users/tjiang/gitlab/xmlparsing/xmltest/svg/logical_interface.svg]]
    }

    class link_aggregation_group << (I, #FF7700) Identity>> #lightgreen {
        - <b>lacp_enabled: Boolean</b>
    }


    class virtual_machine_interface << (I, #FF7700) Identity>> {
        - mac_addresses: MacAddressesType
    }

    class virtual_machine << (I, #FF7700) Identity>> {
        - type: enum { vm, bare_metal }
    }

    class fabric << (I, #FF7700) Identity>> {
        - <b>annotations: Map<String, String>
        - <b>credentials: List<DeviceCredential>
        - <b>fabric_protocol: enum { ebgp }
    }

    class instance_ip << (I, #FF7700) Identity>> {
        - address: IpAddressType
        - family: enum { v4, v6 }
        - address_mode: enum { active_active, active_standby }
        - secondary_ip_tracking_ip: SubnetType
        - subnet_uuid: UUID
        - secondary: Boolean
        - local_ip: Boolean
        - service_instance_ip: Boolean
        - service_health_check_ip: Boolean
    }

    class network_ipam << (I, #FF7700) Identity>> {
        - mgmt: IpamType
        - subnets: list<IpamSubnetType>
        - ipam-subnet-method: enum {
            user-defined-subnet
            flat-subnet
            auto-subnet }
    }

    class RoutingBridgingRole << (T, #FF7700) String>> #lightgreen {
        - <b>enum
          - <b>centrally-routed-bridging
          - <b>edge-routed-bridging
          - <b>route-reflector
    }
}

global_system_config " 1   " *- "   n" fabric: <has>
global_system_config "1  " *-- "n    " physical_router: <has>
fabric "1     " --> "n  " physical_router

physical_router *- link_aggregation_group: <has>
physical_router *-- physical_interface: <has>

physical_interface <-- link_aggregation_group
physical_interface -> physical_interface
physical_interface *-- logical_interface: <has>
physical_interface . RoutingBridgingRole

virtual_machine "1 " *-- "n "virtual_machine_interface: <has>
logical_interface "1    " -> "    1" virtual_machine_interface
logical_interface "1 " <-- "1   " instance_ip: fabric\ninterface ip
virtual_machine_interface "1  " <-- "1" instance_ip
network_ipam " 1" <- "n"instance_ip

@enduml
